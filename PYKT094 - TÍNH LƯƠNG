import functools
from functools import *
from math import *
import sys
from decimal import *
from re import *
from itertools import combinations
from datetime import *

MAX = 100000
prime = [True] * MAX
prime[1] = prime[0] = False
for i in range(2, int(isqrt(MAX)) + 1):
    if prime[i]:
        for j in range(i * i, MAX, i):
            prime[j] = False
Fibo = [0] * 93
Fibo[1] = Fibo[2] = 1
for i in range(3, 93):
    Fibo[i] = Fibo[i - 1] + Fibo[i - 2]

lst = {
    'A': [10, 12, 14, 20],
    'B': [10, 11, 13, 16],
    'C': [9, 10, 12, 14],
    'D': [8, 9, 11, 13]
}


def get_multiplier(x, y):
    if 1 <= y <= 3:
        return lst[x][0]
    elif 4 <= y <= 8:
        return lst[x][1]
    elif 9 <= y <= 15:
        return lst[x][2]
    else:
        return lst[x][3]


class Data:
    def __init__(self, tmp):
        self.id = input()
        self.name = input()
        self.base = int(input())
        self.work_days = int(input())
        self.salary = self.calc()
        self.department = tmp[self.id[-2:]]

    def calc(self):
        tmp = self.id
        x, y = tmp[0], int(tmp[1:3])
        return get_multiplier(x, y) * self.base * self.work_days*1000

    def __str__(self):
        return f"{self.id} {self.name} {self.department} {self.salary}"


def main():
    department, vector = {}, []
    for _ in range(int(input())):
        row = input().split()
        department[row[0]] = ' '.join(row[1:])
    for _ in range(int(input())):
        x = Data(department)
        vector.append(x)
    for i in vector: print(i)


if __name__ == '__main__':
    # for case in range(int(input())):
    main()
