import functools
from functools import *
from math import *
import sys
from decimal import *
from re import *
from itertools import combinations
from datetime import *

MAX = 100000
prime = [True] * MAX
prime[1] = prime[0] = False
for i in range(2, int(isqrt(MAX)) + 1):
    if prime[i]:
        for j in range(i * i, MAX, i):
            prime[j] = False
Fibo = [0] * 93
Fibo[1] = Fibo[2] = 1
for i in range(3, 93):
    Fibo[i] = Fibo[i - 1] + Fibo[i - 2]

d = {}


class Data:
    def __init__(self, id):
        self.id = 'T{:03d}'.format(id)
        row = input().split()
        self.code = row[0]
        self.subject = d[self.code]
        date = row[1].split('/')
        time = row[2].split(':')
        self.date, self.time = row[1], row[2]
        self.day, self.month, self.year = date[0], date[1], date[2]
        self.hour, self.min = time[0], time[1]
        self.group = row[3]

    def __str__(self):
        return f"{self.id} {self.code} {self.subject} {self.date} {self.time} {self.group}"


def main():
    n, m = map(int, input().split())
    vector = []
    for i in range(n):
        x, y = input(), input()
        d[x] = y
    for i in range(m):
        x = Data(i + 1)
        vector.append(x)
    for i in sorted(vector, key=lambda x: (x.year, x.month, x.day, x.hour, x.min, x.code)):
        print(i)


if __name__ == '__main__':
    # for case in range(int(input())):
    main()
