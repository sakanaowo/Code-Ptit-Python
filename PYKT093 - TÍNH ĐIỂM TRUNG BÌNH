import functools
from math import *
from itertools import permutations

MAX = 1000000
prime = [True] * MAX
prime[1] = False
for i in range(2, int(isqrt(MAX)) + 1):
    if prime[i]:
        for j in range(i * i, MAX, i):
            prime[j] = False


class Data:
    def __init__(self, id):
        self.id = 'SV{:02d}'.format(id)
        self.name = ' '.join(i.capitalize() for i in input().split())
        x, y, z = float(input()), float(input()), float(input())
        self.score = self.calc(x, y, z)

    def calc(self, x, y, z):
        tmp = (3 * x + 3 * y + 2 * z) / 8
        return ceil(tmp * 100) / 100

    def __str__(self):
        return f"{self.id} {self.name} {'{:.2f}'.format(self.score)} {self.rank}"


def rank(vector):
    vector = sorted(vector, key=lambda x: (-x.score, x.id))
    vector[0].rank = 1
    for i in range(1, len(vector)):
        vector[i].rank = vector[i - 1].rank if vector[i].score == vector[i - 1].score else i + 1
    return vector


def main():
    vector = []
    n = int(input())
    for id in range(n):
        tmp = Data(id + 1)
        vector.append(tmp)
    rank_list = rank(vector)
    for x in rank_list:
        print(x)


if __name__ == '__main__':
    # for case in range(int(input())):
    main()
